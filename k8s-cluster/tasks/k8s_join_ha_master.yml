
# kubeadm token create --ttl 10m --print-join-command
# kubeadm init phase upload-certs --upload-certs

# kubeadm join 192.168.122.170:6443 \
#     --control-plane \
#     --certificate-key 9555b74008f24687eb964bd90a164ecb5760a89481d9c55a77c129b7db438168 \
#     --token xaw58o.0fjg0xp0ohpucwhr \
#     --discovery-token-ca-cert-hash sha256:5efac16c86e5f2ed6b20c6dbcbf3a9daa5bf75aa604097dbf49fdc3d1fd5ff7d


########################### master-initial ###############################

# First create token on initial master
- name: Create join token on initial master
  shell: |
    kubeadm token create \
      --ttl 10m \
      --print-join-command
  register: kubeadm_token_create_result
  when: inventory_hostname in groups['master-initial']


# Upload certs on initial master
- name: Upload certs on initial master
  shell: |
    kubeadm init phase upload-certs \
      --upload-certs | grep -v upload-certs
  register: kubeadm_init_phase_result
  when: inventory_hostname in groups['master-initial']
  

# .kube config
- name: Register kube config
  shell: |
    cat /home/{{k8s_user}}/.kube/config
  register: kube_config_content_raw
  when: inventory_hostname in groups['master-initial']



########################### master-ha ###############################

# vars
- name: Register vars on HA masters
  set_fact:
    master_join_command: "{{ hostvars[groups['master-initial'][0]]['kubeadm_token_create_result'].stdout }}"
    master_upload_cert: "{{ hostvars[groups['master-initial'][0]]['kubeadm_init_phase_result'].stdout }}"
    kube_config_content: "{{ hostvars[groups['master-initial'][0]]['kube_config_content_raw'].stdout }}"
  when: inventory_hostname in groups['master-ha']

- name: Debug vars on first HA master
  debug:
    msg:
      - "master_join_command: {{master_join_command}}"
      - "master_upload_cert: {{master_upload_cert}}"
      - "kube_config_content: {{kube_config_content}}"
  when: inventory_hostname in groups['master-ha'][0]


# join command
- name: Register HA master join command
  set_fact:
    # full_join_command: |
    #   {{master_join_command}} \
    #     --certificate-key {{master_upload_cert}} \
    #     --control-plane >> master_node_joined.txt
    full_join_command: |
      {{master_join_command}} --certificate-key {{master_upload_cert}} --control-plane >> master_node_joined.txt
  when: inventory_hostname in groups['master-ha']

- name: Debug full join command
  debug:
    msg: "full_join_command: {{full_join_command}}"
  when: inventory_hostname in groups['master-ha'][0]



# kube config + join
- name: Create .kube directory
  file:
    path: "/home/{{k8s_user}}/.kube"
    state: directory
    owner: "{{k8s_user}}"
    group: "{{k8s_user}}"
    mode: 0755
  when: inventory_hostname in groups['master-ha']

- name: Join HA masters to the cluster
  # shell: |  
  #   {{master_join_command}} \
  #     --certificate-key {{master_upload_cert}} \
  #     --control-plane >> master_node_joined.txt
  shell: "{{full_join_command}}"
  args:
    chdir: "/home/{{k8s_user}}/"
    creates: master_node_joined.txt
  when: inventory_hostname in groups['master-ha']

- name: Configure kube config on HA masters
  copy:
    content: "{{kube_config_content}}"
    dest: "/home/{{k8s_user}}/.kube/config"
  when: inventory_hostname in groups['master-ha']


########################### all mastes ###############################

# Get node status
- name: Get node status
  become_user: "{{k8s_user}}"
  shell: |
    kubectl get nodes
  register: get_nodes
  when: inventory_hostname in groups['masters']

- name: Debug get nodes
  debug:
    msg: "{{ get_nodes.stdout_lines }}"
  when: inventory_hostname in groups['masters']