---

stages:
  - yaml-lint
  - ansible-syntax-check
  - vagrant-validate

# Ansible Syntax Check
.playook-syntax-check:
  image: cytopia/ansible:2.8
  stage: ansible-syntax-check
  script:
    - ansible-playbook -i $INVENTORY $PLAYBOOK --syntax-check

full-install:
  extends: .playook-syntax-check
  variables:
    PLAYBOOK: playbook-k8s-all.yml
    INVENTORY: inventories/examples/vagrant-full-install.inv

add-master:
  extends: .playook-syntax-check
  variables:
    PLAYBOOK: playbook-kubeadm-add-new-master.yml
    INVENTORY: inventories/examples/vagrant-add-master.inv

add-worker:
  extends: .playook-syntax-check
  variables:
    PLAYBOOK: playbook-kubeadm-add-new-worker.yml
    INVENTORY: inventories/examples/vagrant-add-worker.inv


# Yaml linting
.yamllint:
  image: sdesbure/yamllint:latest
  stage: yaml-lint
  allow_failure: true
  variables:
    YAML_PATH: .
    ALLOW_WARNINGS: false
  script:
    - |
      yamllint --strict ${YAML_PATH}
      LINT_STATUS=$?
      case ${LINT_STATUS} in
        0)
          echo "Everything OK"
          exit 0 ;;
        1)
          echo "Error: YAML errors detected" ;;
        2)
          if [ "${ALLOW_WARNINGS}" = true ]; then
              echo "Error: YAML warnings detected, ignoring"
              exit 0
          else
              echo "Error: YAML warnings detected"
          fi ;;
        *)
          echo "Error: Unknown reason" ;;
      esac
      exit ${LINT_STATUS}

ansible-roles:
  extends: .yamllint
  variables:
    YAML_PATH: roles
    ALLOW_WARNINGS: true

vagrant-inventory:
  extends: .yamllint
  variables:
    YAML_PATH: Vagrant/vagrant_servers.yaml
    ALLOW_WARNINGS: true


# Vagrant Validation
# - vagrant validate
# - run bootstrap scripts in container (centos/systemd?)
# - yamllint vangrant servers

vagrantfile:
  image: engineerbetter/vagrant:latest
  stage: vagrant-validate
  script:
    - cd Vagrant
    - cat Vagrantfile
    - vagrant --version
    # - VBoxManage --version
    - vagrant validate --debug
