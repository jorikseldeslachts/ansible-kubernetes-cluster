
- name: Create ingress config directory
  file:
    path: "{{k8s_ingress_config_path}}"
    state: directory
    owner: "{{k8s_user}}"
    group: "{{k8s_user}}"
    mode: 0555

# - name: Download ingress yaml file
#   get_url:
#     url: "{{k8s_ingress_file_url}}"
#     dest: "{{k8s_ingress_config_path}}/nginx-ingress-config.yml"

# - name: "Configure Nginx ingress replica amount (replicas: {{k8s_ingress_replicas}})"
#   replace:
#     path: "{{k8s_ingress_config_path}}/nginx-ingress-config.yml"
#     regexp: 'replicas(.+)'
#     replace: "replicas: {{k8s_ingress_replicas}}"


- name: Install pip for custom module
  yum:
    name: "{{item}}"
    state: present
  with_items:
    - python-pip
    # - virtualenv

- name: Pip install requirements
  pip:
    # chdir: ../../library
    # requirements: requirements.txt
    name: "{{item}}"
  with_items:
    - requests
    - pyyaml

- name: Test custom nginx ingress controller module
  nginx_ingress_controller:
    git_url: "{{k8s_ingress_file_url}}"
    node_selector: "node-role.kubernetes.io/infra=true"
    destination: "{{k8s_ingress_config_path}}/custom-nginx-ingress-config.yml"


########################### main_master ###############################
- name: Apply Nginx ingress plugin
  shell: |
    kubectl --kubeconfig=/home/{{k8s_user}}/.kube/config \
      apply -f {{k8s_ingress_config_path}}/nginx-ingress-config.yml
  register: kubectl_output
  until: 
    - kubectl_output.stdout.find("unexpected EOF") == -1
  retries: 10
  delay: 3
  when: inventory_hostname == main_master

- name: Kubectl output
  debug:
    msg: 
      - "{{ kubectl_output.stdout_lines }}"
  when: inventory_hostname == main_master

- name: Nginx ingress installed
  debug: 
    msg:
      - "replicas: {{k8s_ingress_replicas}}"
  when: inventory_hostname == main_master

# kubectl get pods -n ingress-nginx
